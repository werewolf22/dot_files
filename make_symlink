#!/usr/bin/env bash
###########################################################################################################################
# With the help of reference in http://blog.smalleycreative.com/tutorials/using-git-and-github-to-manage-your-dotfiles/   #
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles                              #
###########################################################################################################################

# home directory
home=~
# dotfiles directory
dir=~/dot_files
# old dotfiles backup directory
olddir=~/dotfiles_old
# list of files/folders to symlink in homedir
files="zshrc  bin  profile  xinputrc"

# plugin manager for vim
# setup_vundle() {
#     mkdir -p ~/.vim/bundle
#     git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
# (optional) For those using the fish shell: add set shell=/bin/bash to your .vimrc
# 	vim +PluginInstall +qall
# }

# create dotfiles_old in homedir
if [ ! -d $olddir ]; then
    echo "Creating $olddir for backup of any existing dotfiles in ~"
    mkdir -p $olddir
    echo "...done"
else
    echo "The directory $olddir already exists"
fi

# change to the dotfiles directory
echo "Changing to the $dir directory"
cd $dir
echo "...done"

# move any existing dotfiles in homedir to dotfiles_old directory, then create symlinks
for file in $files; do
    # -f tests for regular file and -d tests for directory, -h test for symbolic link
    if [ -d ~/$file ] && [ ! -h ~/$file ]; then
        echo "Moving $file from $home to $olddir"
        mv ~/$file $olddir
    	echo "Creating symlink to $file in $home directory."
    	ln -s $dir/$file ~/$file
    elif [ -f ~/.$file -a ! -h ~/.$file ]; then
        echo "Moving .$file from $home to $olddir"
        mv ~/.$file $olddir
    	echo "Creating symlink to $file in $home directory."
    	ln -s $dir/$file ~/.$file
    else
        if [  -h ~/$file ]; then
            echo "$file is already used as symbolic link"
        elif [ -h ~/.$file ]; then
            echo ".$file is already used as symbolic link"
        else
            echo "there is no $file"
        fi
    fi
done

# if [ ! -d ~/.vim/bundle/Vundle.vim ]; then
#     setup_vundle
# fi
